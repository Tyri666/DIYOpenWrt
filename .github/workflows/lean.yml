name: 编译OpenWrt-X86

on: 
  #push:
    #branches: 
      #- master
  schedule:
     - cron: 0 21 * * 5
  watch:
     types: [started]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: 校验本地文件
      uses: actions/checkout@main

    - name: 安装编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
        sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get update
        sudo -E apt-get -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils 
        rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        
    - name: git源码
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt



    - name: 更新 feeds
      run: cd openwrt && ./scripts/feeds update -a
      

    - name: 安装 feeds
      run: cd openwrt && ./scripts/feeds install -a

    #- name: SSH connection to Actions
      #uses: P3TERX/debugger-action@master
      #if: env.SSH_ACTIONS == 'true'
      
    - name: 自定义的插件
      run: |
        rm -rf openwrt/package/lean/luci-theme-argon
        git clone https://github.com/fw876/helloworld.git openwrt/package/luci-app-ssr-plus
        git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git openwrt/package/luci-theme-argon
        git clone https://github.com/jerrykuku/luci-app-argon-config.git openwrt/package/luci-app-argon-config
        git clone -b lede https://github.com/pymumu/luci-app-smartdns openwrt/package/luci-app-smartdns
        svn co https://github.com/pymumu/smartdns/trunk/package/openwrt openwrt/package/smartdns
      # git clone https://github.com/destan19/OpenAppFilter.git openwrt/package/OpenAppFilter
      # svn co https://github.com/fw876/helloworld/trunk/luci-app-ssr-plus openwrt/package/luci-app-ssr-plus
      #  svn co https://github.com/fw876/helloworld/trunk/tcping openwrt/package/tcping
      #  svn co https://github.com/fw876/helloworld/trunk/ipt2socks-alt openwrt/package/ipt2socks-alt
      #  svn co https://github.com/fw876/helloworld/trunk/xray openwrt/package/xray
      # svn co https://github.com/fw876/helloworld/trunk/naiveproxy openwrt/package/naiveproxy
      #  git clone https://github.com/tty228/luci-app-serverchan openwrt/package/luci-app-serverchan
      #  git clone -b 18.06 https://github.com/garypang13/luci-theme-edge.git openwrt/package/luci-theme-edge
      #  git clone https://github.com/Mrbai98/luci-theme-atmaterial openwrt/package/luci-theme-atmaterial
      #  git clone https://github.com/jerrykuku/node-request.git openwrt/package/node-request
      #  git clone https://github.com/jerrykuku/luci-app-jd-dailybonus openwrt/package/luci-app-jd-dailybonus
      #  git clone https://github.com/destan19/OpenAppFilter openwrt/package/luci-app-oaf
      #  sed -i '24d' openwrt/package/luci-app-smartdns/Makefile
      #  sed -i '23a include $(TOPDIR)/feeds/luci/luci.mk' openwrt/package/luci-app-smartdns/Makefile
      #  sed -i 's/+luci-compat +smartdns/+smartdns/g' openwrt/package/luci-app-smartdns/Makefile
      # rm -rf lede/package/lean/luci-app-smartdns
      # rm -rf lede/package/lean/luci-theme-argon
      # cp -r openwrt/package/luci-app-smartdns lede/package/lean/
      # cp -r openwrt/package/luci-theme-argon lede/package/lean/
      # cp -r /home/runner/work/lede/lede/openwrt/package/luci-app-wrtbwmon /home/runner/work/lede/lede/package/lean/
      # git clone https://github.com/vernesong/OpenClash openwrt/package/tmp
      # git clone https://github.com/Leo-Jo-My/luci-theme-opentomcat.git openwrt/package/luci-theme-opentomcat
      
        
    #- name: SSH connection to Actions
      #uses: P3TERX/debugger-action@master
    #  if: env.SSH_ACTIONS == 'true'

    - name: 导入自定义配置
      run: |
        [ -e files ] && mv files openwrt/files
        cd openwrt
        rm -f ./.config*
        touch ./.config
        
        # IPv6支持:
        cat >> .config <<EOF
        # CONFIG_IPV6 is not set
        # CONFIG_PACKAGE_dnsmasq_full_dhcpv6 is not set
        # CONFIG_PACKAGE_ipv6helper is not set
        CONFIG_PACKAGE_dnsmasq-full=y
        CONFIG_PACKAGE_dnsmasq_full_dhcp=y
        CONFIG_PACKAGE_dnsmasq_full_ipset=y
        EOF
        
        
        # LuCI插件
        cat >> .config <<EOF
        CONFIG_PACKAGE_luci-app-ssr-plus=y
        CONFIG_PACKAGE_luci-app-adbyby-plus=y
        CONFIG_PACKAGE_luci-app-unblockmusic=y
        CONFIG_PACKAGE_luci-app-ttyd=y
        CONFIG_PACKAGE_luci-app-webadmin=y
        CONFIG_PACKAGE_luci-app-wol=y
        CONFIG_PACKAGE_luci-app-smartdns=y
        CONFIG_PACKAGE_luci-app-filetransfer=y
        CONFIG_PACKAGE_luci-app-sfe=y
        CONFIG_PACKAGE_UnblockNeteaseMusic=y
        CONFIG_PACKAGE_luci-app-argon-config=y
        EOF
        
        # LuCI主题:
        cat >> .config <<EOF
        CONFIG_PACKAGE_luci-theme-argon=y 
        EOF
        
        # 常用软件包:
        cat >> .config <<EOF
        CONFIG_PACKAGE_curl=y
        CONFIG_PACKAGE_htop=y
        CONFIG_PACKAGE_nano=y
        CONFIG_PACKAGE_screen=y
        CONFIG_PACKAGE_tree=y
        CONFIG_PACKAGE_vim-fuller=y
        CONFIG_PACKAGE_wget=y
        CONFIG_PACKAGE_iperf=y
        CONFIG_PACKAGE_iperf3=y
        CONFIG_PACKAGE_tcping=y
        CONFIG_PACKAGE_bind-dig=y
        CONFIG_PACKAGE_pdnsd-alt=y
        CONFIG_PACKAGE_fdisk=y
        CONFIG_PACKAGE_cfdisk=y
        CONFIG_PACKAGE_lsblk=y
        CONFIG_PACKAGE_lrzsz=y
        CONFIG_PACKAGE_unzip=y
        CONFIG_PACKAGE_zip=y
        CONFIG_PACKAGE_tar=y
        CONFIG_PACKAGE_net-tools=y
        CONFIG_QCOW2_IMAGES=y
        EOF
        
        # 取消编译VMware镜像以及镜像填充 (不要删除被缩进的注释符号)
        cat >> .config <<EOF
        # CONFIG_PACKAGE_luci-app-docker is not set
        # CONFIG_PACKAGE_luci-app-wifischedule is not set
        # CONFIG_PACKAGE_luci-app-vsftpd is not set
        # CONFIG_PACKAGE_luci-app-usb-printer is not set
        # CONFIG_PACKAGE_luci-app-transmission is not set
        # CONFIG_PACKAGE_luci-app-xlnetacc is not set
        # CONFIG_PACKAGE_luci-app-sqm is not set
        # CONFIG_PACKAGE_luci-app-openvpn is not set
        # CONFIG_PACKAGE_luci-app-openvpn-server is not set
        # CONFIG_PACKAGE_luci-app-qbittorrent is not set
        # CONFIG_PACKAGE_luci-app-ipsec-vpnd is not set
        # CONFIG_PACKAGE_luci-app-pptp-server is not set
        # CONFIG_PACKAGE_luci-app-unblockneteasemusic-mini is not set
        # CONFIG_PACKAGE_luci-app-airplay2 is not set
        # CONFIG_PACKAGE_luci-app-music-remote-center is not set
        # CONFIG_PACKAGE_luci-app-zerotier is not set
        # CONFIG_PACKAGE_luci-app-amule is not set
        # CONFIG_PACKAGE_luci-app-flowoffload is not set
        # CONFIG_PACKAGE_luci-app-vlmcsd is not set
        # CONFIG_PACKAGE_luci-app-mwan3 is not set
        # CONFIG_PACKAGE_luci-app-mwan3helper is not set
        # CONFIG_PACKAGE_luci-app-accesscontrolr is not set
        # CONFIG_PACKAGE_luci-app-syncdial is not set
        # CONFIG_PACKAGE_luci-app-ddns is not set 
        # CONFIG_PACKAGE_luci-app-firewall is not set
        # CONFIG_PACKAGE_luci-app-upnp is not set
        # CONFIG_PACKAGE_luci-app-jd-dailybonus is not set
        # CONFIG_PACKAGE_luci-app-uugamebooster is not set
        EOF
        
        sed -i 's/^[ \t]*//g' ./.config
        echo '修改网关地址和密码'
        sed -i 's/192.168.1.1/192.168.1.233/g' package/base-files/files/bin/config_generate
        
        make defconfig
                
      # sed -i 's@.*CYXluq4wUazHjmCDBCqXF*@#&@g' package/lean/default-settings/files/zzz-default-settings
      # sed -i 's/KERNEL_PATCHVER:=5.4/KERNEL_PATCHVER:=4.19/g' ./target/linux/x86/Makefile  #修改内核版本
      # sed -i 's/KERNEL_TESTING_PATCHVER:=5.4/KERNEL_TESTING_PATCHVER:=4.19/g' ./target/linux/x86/Makefile  #修改内核版本

    - name: 下载编译所需源码
      run: |
        cd openwrt && make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译
      run: |
        cd openwrt
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s

    - name: 清理不必要的文件
      run: |
        cd openwrt
        rm -rf ./artifact/
        mkdir -p ./artifact/
        find ./bin/targets/ -type f -name *combined* | xargs -i mv -f {} ./artifact/
        mv .config ./artifact/
        mkdir -p ./ipk/
        cp -rf ./bin/packages/* ./ipk/
        echo "FILENAME=$(echo "OpenWrt-x86-`date -d "+8 hour" +%Y%m%d-%H%M%S`")" >> $GITHUB_ENV
      # echo "::set-env name=FILENAME::$(echo "OpenWrt-x86-`date -d "+8 hour" +%Y%m%d-%H%M%S`")"
    - name: 上传IMG固件
      uses: actions/upload-artifact@main
      with:
        name: ${{ env.FILENAME }}
        path: ./openwrt/artifact/
        
    - name: 上传IPK包
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt_IPK
        path: ./openwrt/ipk/
